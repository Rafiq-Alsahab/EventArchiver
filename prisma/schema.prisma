

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  OWNER
}

enum MediaType {
  IMAGE
  VIDEO
}

model User {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  password String
  name     String?
  role     Role
  events   Event[]
  media    Media[] 
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Event {
  id            Int      @id @default(autoincrement())
  owner         User     @relation(fields: [ownerId], references: [id])
  ownerId       Int
  title         String
  description   String?
  subdomain     String   @unique
  liveStreamUrl String?
  template      Template @relation(fields: [templateId], references: [id])
  templateId    Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  media         Media[]
  albums        Album[]
  highlights    Highlight[]
  payments      Payment[]
}

model Template {
  id      Int      @id @default(autoincrement())
  name    String
  config  Json
  events  Event[]
}

model Media {
  id               Int      @id @default(autoincrement())
  event            Event    @relation(fields: [eventId], references: [id])
  eventId          Int
  uploader         User?    @relation(fields: [uploaderId], references: [id])
  uploaderId       Int?
  type             MediaType
  url              String
  thumbnailUrl     String?
  aiClassification Json?
  createdAt        DateTime @default(now())
  albums           AlbumMedia[]
}

model Album {
  id              Int          @id @default(autoincrement())
  event           Event        @relation(fields: [eventId], references: [id])
  eventId         Int
  title           String
  description     String?
  isAutoGenerated Boolean      @default(false)
  createdAt       DateTime     @default(now())
  media           AlbumMedia[]
}

model AlbumMedia {
  id       Int   @id @default(autoincrement())
  album    Album @relation(fields: [albumId], references: [id])
  albumId  Int
  media    Media @relation(fields: [mediaId], references: [id])
  mediaId  Int
}

model Highlight {
  id          Int      @id @default(autoincrement())
  event       Event    @relation(fields: [eventId], references: [id])
  eventId     Int
  title       String
  description String?
  mediaIds    Json?    // لتخزين مجموعة معرفات الوسائط المرتبطة (يمكن استخدام علاقة منفصلة لاحقاً)
  createdAt   DateTime @default(now())
}

model Payment {
  id              Int      @id @default(autoincrement())
  event           Event    @relation(fields: [eventId], references: [id])
  eventId         Int
  stripeSessionId String   @unique
  amount          Int
  status          String
  createdAt       DateTime @default(now())
}
